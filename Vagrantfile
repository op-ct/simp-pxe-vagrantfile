
# -*- mode: ruby -*-
# vim: set syntax=ruby ts=2 sw=2 et:

Vagrant.configure("2") do |config|
  config.ssh.insert_key = false
  config.vm.define 'puppetserver', primary: true do |v|
    v.vm.box = "server-6.5.0-Alpha.el7-CentOS-7.0.x86-64"
    v.vm.box_check_update = 'false'

    # The url from where the 'v.vm.box' box will be fetched if it
    # doesn't already exist on the user's system.
    v.vm.box_url = "file:///var/simpdev/ctessmer/vagrant/simpci/boxes/server-6.5.0-Alpha.el7-CentOS-7.0.x86-64.json"

    v.vm.box_check_update = 'false'

    # This establishes `/vagrant`, so the vagrant SSH user can upload and exec
    # `shell` provisioner files.  SIMP locks down its partitions so tightly
    # that every other location that vagrant can upload files to is `noexec`!
    #
    # A local `shared/` folder is not required.
    v.vm.synced_folder 'shared', '/vagrant', create: true, type: 'rsync', rsync_exclude: '.git/'
#    v.vm.synced_folder "shared", "/vagrant", disabled: true, create: false


    # These network details were generated by simp-packer with your .box file.
    v.vm.network :private_network,
      ip:                  "192.168.103.7",
      netmask:             "255.255.255.0",
      name:                "vboxnet1",
      mac:                 "aabbcccc0007",
      auto_config:         false,
      virtualbox__intnet:  'pxe_network'

    v.vm.provider :virtualbox do |vb|
      vb.customize [
                    'modifyvm', :id,
                    '--memory', '4096',
                    '--cpus', '2',
                    '--natdnshostresolver1', 'on',
                    # this is to stop VirtualBox from blocking ALSA
                    '--audio', 'null',
                   ]
      vb.customize ['modifyvm', :id, '--vrde', 'on']
      vb.customize ['modifyvm', :id, '--vrdeauthtype', 'null']
      vb.customize ['modifyvm', :id, '--vrdeproperty', 'Security/Method=negotiate']
      vb.customize ['modifyvm', :id, '--vrdeproperty', 'Security/CACertificate=/etc/pki/simp/x509/cacerts/cacerts.pem']
      vb.customize ['modifyvm', :id, '--vrdeproperty', 'Security/ServerCertificate=/etc/pki/simp_apps/packer/packer-vagrant.pub']
      vb.customize ['modifyvm', :id, '--vrdeproperty', 'Security/ServerPrivateKey=/etc/pki/simp_apps/packer/packer-vagrant.pem']
    end

    v.vm.provision 'upload_tftpboot.pp',
                   type: 'file',
                   source: './shared/tftpboot.pp',
                   destination: '/vagrant/tftpboot.pp'
    v.vm.provision 'set up local internet and classify server21',
                   type: 'shell',
                   upload_path: '/vagrant/vagrant-shell.sh',
                   inline: <<~INLINE_COMMANDS
                     #!/bin/bash

                     set -x
                     ppdir=/etc/puppetlabs/code/environments/production

                     cat > $ppdir/data/hosts/server21.simp.test.yaml <<EEE
                     ---
                     iptables::ports:
                       defaults:
                         apply_to: ipv4
                       4567:
                         proto: tcp
                       4568:
                         proto: tcp
                       4569:
                         proto: tcp
                       6419:
                         proto: tcp
                       7000:
                         proto: tcp
                       7001:
                         proto: tcp
                       7001:
                         proto: tcp
                       7002:
                         proto: tcp
                       7003:
                         proto: tcp
                       7004:
                         proto: tcp
                       7777:
                         proto: tcp
                       8443:
                         proto: tcp
                       8080:
                         proto: tcp
                     EEE

                     mkdir -p $ppdir/site/profiles/manifests
                     cat /vagrant/tftpboot.pp > $ppdir/site/profiles/manifests/tftpboot.pp && echo ============YES || echo ==========NO
                     echo 'site::tftpboot::ip: 192.168.103.7' >> $ppdir/hieradata/default.yaml

                     for cmd in chown chmod chcon; do
                       ${cmd} -R --reference="$ppdir" \
                          "$ppdir/site" \
                          "$ppdir/modules/simp" \
                          "$ppdir/data/{default.yaml,hosts/server21.simp.test.yaml}"
                     done

                     puppet agent -t

                     true
                   INLINE_COMMANDS
  end

  config.vm.define :pxe_client do |pxe_client|

    pxe_client.vm.box = 'empty_box'
    pxe_client.vm.boot_timeout = 3600
    pxe_client.vm.network :private_network,
                          ip:                  "192.168.103.21",
                          netmask:             "255.255.255.0",
                          name:                "vboxnet1",
                          mac:                 "aabbcccc0021",
                          auto_config:         false,
                          virtualbox__intnet:  'pxe_network'

    pxe_client.vm.network "forwarded_port", guest: 443, host: 8443
    pxe_client.vm.network "forwarded_port", guest: 80, host: 8080
    pxe_client.vm.provider :virtualbox do |vb|
      # needs to be *over* 1024
      vb.memory = '2048'
      vb.cpus   = '2'

      vb.customize [
        'modifyvm', :id,
        '--nic1', 'intnet',
        '--intnet1', 'pxe_network',
        '--macaddress1', 'aabbcccc0021',
        '--boot1', 'disk', # boot from disk after pxe kickstart
        '--boot2', 'net',
        '--boot3', 'none',
        '--boot4', 'none'
      ]

      vb.customize ['modifyvm', :id, '--vrde', 'on']
      vb.customize ['modifyvm', :id, '--vrdeauthtype', 'null']
      #vb.customize ['modifyvm', :id, '--vrdeproperty', 'Security/Method=negotiate']
      #vb.customize ['modifyvm', :id, '--vrdeproperty', 'Security/CACertificate=/etc/pki/simp/x509/cacerts/cacerts.pem']
      #vb.customize ['modifyvm', :id, '--vrdeproperty', 'Security/ServerCertificate=/etc/pki/simp_apps/packer/packer-vagrant.pub']
      #vb.customize ['modifyvm', :id, '--vrdeproperty', 'Security/ServerPrivateKey=/etc/pki/simp_apps/packer/packer-vagrant.pem']
    end
  end
end
